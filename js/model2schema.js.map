{"version":3,"sources":["/projects/nodejs/botbuilder/abot_stringdist/src/../src/model2schema.ts"],"names":[],"mappings":"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","file":"model2schema.js","sourcesContent":["'use strict'\r\n\r\n/**\r\n * (C) gerd forstmann 2017\r\n *\r\n * convert model file into an mongoose schema\r\n */\r\n\r\n//import * as intf from 'constants';\r\nimport * as debug from 'debug';\r\n\r\nimport * as _ from 'lodash';\r\n\r\nimport { IFModel  as IMatch } from 'fdevsta_monmove';\r\n\r\nimport *  as fdevsta from 'fdevsta_monmove';\r\n\r\nvar IFModel = fdevsta.IFModel;\r\n\r\nvar debuglog = debug('model');\r\n\r\nimport * as fs from 'fs';\r\n\r\nimport * as mongoose from 'mongoose';\r\n\r\n\r\nexport function makeMongoName(s : string) : string {\r\n  return s.replace(/[^a-zA-Z0-9]/g,'_');\r\n}\r\n\r\nexport function readFileAsJSON(filename : string) : any {\r\n    var data = fs.readFileSync(filename, 'utf-8');\r\n    try {\r\n        return JSON.parse(data);\r\n    } catch(e) {\r\n        console.log(\"Content of file \"+ filename + \" is no json\" + e);\r\n        process.exit(-1);\r\n    }\r\n    return undefined;\r\n}\r\n\r\n\r\nexport function loadModel(modelPath: string, sModelName: string) {\r\n    debuglog(\" loading \" + sModelName + \" ....\");\r\n    var oMdl = readFileAsJSON('./' + modelPath + '/' + sModelName + \".model.json\") as fdevsta.IFModel.IModel;\r\n    return oMdl;\r\n    //mergeModelJson(sModelName, oMdl);\r\n//    loadModelData(modelPath, oMdl, sModelName, oModel);\r\n}\r\n\r\n\r\nexport function loadModelData(modelPath: string, sModelName: string) : any[] {\r\n    debuglog(\" loading \" + sModelName + \" ....\");\r\n    var oMdlData = readFileAsJSON('./' + modelPath + '/' + sModelName + \".data.json\") as any;\r\n    return oMdlData;\r\n}\r\n\r\nexport function model2Schema(oModel : any ) : any {\r\n\r\n}\r\n\r\nexport function calcMongoCats(cats : string[]) : string[] {\r\n  var props = {};\r\n  var res = cats.map(cat => { var r = makeMongoName(cat);\r\n      if(props[r]) {\r\n        throw new Error(`${props[r]} and ${cat} yield conflicting mongodb property names`);\r\n      }\r\n      props[r] = cat;\r\n      return r;\r\n  });\r\n  return res;\r\n}\r\n\r\nexport function getTextIndexCategories(oMdl : IMatch.IModel) : string[] {\r\n  return _.difference(oMdl.wordindex, oMdl.exactmatch);\r\n}\r\n\r\nexport function mergeModelJson(sModelName: string, oMdl: IMatch.IModel) {\r\n    var categoryDescribedMap = {} as { [key: string]: IMatch.ICategoryDesc };\r\n    oMdl.bitindex = 0; // getDomainBitIndex(oMdl.domain, oModel);\r\n    oMdl.categoryDescribed = [];\r\n    // rectify category\r\n    oMdl.category = oMdl.category.map(function (cat: any) {\r\n        if (typeof cat === \"string\") {\r\n            return cat;\r\n        }\r\n        if (typeof cat.name !== \"string\") {\r\n            console.log(\"Missing name in object typed category in \" + JSON.stringify(cat) + \" in model \" + sModelName);\r\n            process.exit(-1);\r\n            //throw new Error('Domain ' + oMdl.domain + ' already loaded while loading ' + sModelName + '?');\r\n        }\r\n        categoryDescribedMap[cat.name] = cat;\r\n        oMdl.categoryDescribed.push(cat);\r\n        return cat.name;\r\n    });\r\n\r\n    var schema = new mongoose.Schema({ _id : Number});\r\n\r\n    var props  = {};\r\n\r\n    var mongoCategories = calcMongoCats(oMdl.category);\r\n    mongoCategories.forEach(cat =>\r\n      props[cat] = { type : String, trim : true }\r\n    );\r\n    oMdl.wordindex.forEach(rcat => {\r\n      var cat = makeMongoName(rcat);\r\n      if(!props[cat]) {\r\n        console.error(`model : ${sModelName} wordindex category \"${cat}\" is not in categories?`);\r\n        process.exit(-1);\r\n       }\r\n       props[cat].index = true;\r\n    });\r\n\r\n    oMdl.wordindex = oMdl.wordindex || [];\r\n    oMdl.exactmatch = oMdl.exactmatch || [];\r\n    // check that members of wordindex are in categories,\r\n    oMdl.wordindex = oMdl.wordindex || [];\r\n    oMdl.wordindex.forEach(function (sWordIndex) {\r\n        if (oMdl.category.indexOf(sWordIndex) < 0) {\r\n            throw new Error('Model wordindex \"' + sWordIndex + '\" not a category of domain ' + oMdl.domain + ' ');\r\n        }\r\n    });\r\n    oMdl.exactmatch = oMdl.exactmatch || [];\r\n    oMdl.exactmatch.forEach(function (sExactMatch) {\r\n        if (oMdl.category.indexOf(sExactMatch) < 0) {\r\n            throw new Error('Model exactmatch \"' + sExactMatch + '\" not a category of domain ' + oMdl.domain + ' ');\r\n        }\r\n    });\r\n    oMdl.columns = oMdl.columns || [];\r\n    oMdl.columns.forEach(function (sExactMatch) {\r\n        if (oMdl.category.indexOf(sExactMatch) < 0) {\r\n            throw new Error('Model column \"' + sExactMatch + '\" not a category of domain ' + oMdl.domain + ' ');\r\n        }\r\n    });\r\n\r\n    var s = getTextIndexCategories(oMdl);\r\n    var index = {};\r\n    s.forEach(textIndexCat  => {\r\n      index[makeMongoName(textIndexCat)] = 'text';\r\n    })\r\n    props[\"_id\"] = { type : Number};\r\n    return { props : props,\r\n            index : index};\r\n   // var schema = new mongoose.Schema(props);\r\n   // schema.index(index);\r\n} // loadmodel\r\n\r\n\r\nexport function mapOne(o : any, props : { [key : string ] : string}) : any {\r\n  var res = {};\r\n  Object.keys(props).forEach( key => {\r\n    var val = o[key];\r\n    if(o[key]!== undefined) {\r\n      res[props[key]] = o[key];\r\n    };\r\n  });\r\n  return res;\r\n}\r\n\r\nexport function makeDocuments(data : any, oMdl : IMatch.IModel) : any {\r\n  var props = {};\r\n  oMdl.category.forEach(cat =>\r\n    props[cat] = makeMongoName(cat)\r\n  );\r\n  return data.map( (o,index) =>  {\r\n    var r = mapOne(o,props);\r\n    r._id = index + 1;\r\n    return r;\r\n   });\r\n}"],"sourceRoot":"ABC"}